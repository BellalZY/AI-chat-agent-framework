{"ast":null,"code":"var _jsxFileName = \"/Users/bellal/case-study/Frontend-React/src/components/ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useMemo } from \"react\";\nimport { getAIMessage } from \"../api/api\";\nimport { marked } from \"marked\";\nimport \"./ChatWindow.css\";\n\n// Memoized Message component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Message = /*#__PURE__*/React.memo(_c = ({\n  role,\n  content\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `message-wrapper ${role}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-bubble\",\n      dangerouslySetInnerHTML: {\n        __html: marked(content).replace(/<p>|<\\/p>/g, \"\")\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n});\n_c2 = Message;\nfunction ChatWindow() {\n  _s();\n  const defaultMessage = [{\n    role: \"assistant\",\n    content: \"Hi, how can I help you today?\"\n  }];\n  const [messages, setMessages] = useState(defaultMessage);\n  const [input, setInput] = useState(\"\");\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleSend = async input => {\n    if (input.trim() !== \"\") {\n      const userMessage = {\n        role: \"user\",\n        content: input\n      };\n      setMessages(prev => [...prev, userMessage]);\n      setInput(\"\");\n      const aiMessage = await getAIMessage(input);\n      setMessages(prev => [...prev, aiMessage]);\n    }\n  };\n\n  // Only render the last 3 messages + the current one\n  const recentMessages = useMemo(() => {\n    return messages.slice(-4);\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [recentMessages.map((message, index) => /*#__PURE__*/_jsxDEV(Message, {\n        role: message.role,\n        content: message.content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"chat-input\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type a message...\",\n        onKeyDown: e => {\n          if (e.key === \"Enter\" && !e.shiftKey) {\n            handleSend(input);\n            e.preventDefault();\n          }\n        },\n        rows: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chat-send-button\",\n        onClick: () => handleSend(input),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatWindow, \"QdE9KLLEiuC7x2481QFXleEAbm0=\");\n_c3 = ChatWindow;\nexport default ChatWindow;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Message$React.memo\");\n$RefreshReg$(_c2, \"Message\");\n$RefreshReg$(_c3, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useMemo","getAIMessage","marked","jsxDEV","_jsxDEV","Message","memo","_c","role","content","className","children","dangerouslySetInnerHTML","__html","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c2","ChatWindow","_s","defaultMessage","messages","setMessages","input","setInput","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSend","trim","userMessage","prev","aiMessage","recentMessages","slice","map","message","index","ref","value","onChange","e","target","placeholder","onKeyDown","key","shiftKey","preventDefault","rows","onClick","_c3","$RefreshReg$"],"sources":["/Users/bellal/case-study/Frontend-React/src/components/ChatWindow.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from \"react\";\nimport { getAIMessage } from \"../api/api\";\nimport { marked } from \"marked\";\nimport \"./ChatWindow.css\";\n\n// Memoized Message component\nconst Message = React.memo(({ role, content }) => {\n  return (\n    <div className={`message-wrapper ${role}`}>\n      <div\n        className=\"message-bubble\"\n        dangerouslySetInnerHTML={{\n          __html: marked(content).replace(/<p>|<\\/p>/g, \"\"),\n        }}\n      />\n    </div>\n  );\n});\n\nfunction ChatWindow() {\n  const defaultMessage = [\n    {\n      role: \"assistant\",\n      content: \"Hi, how can I help you today?\",\n    },\n  ];\n\n  const [messages, setMessages] = useState(defaultMessage);\n  const [input, setInput] = useState(\"\");\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleSend = async (input) => {\n    if (input.trim() !== \"\") {\n      const userMessage = { role: \"user\", content: input };\n      setMessages((prev) => [...prev, userMessage]);\n      setInput(\"\");\n\n      const aiMessage = await getAIMessage(input);\n      setMessages((prev) => [...prev, aiMessage]);\n    }\n  };\n\n  // Only render the last 3 messages + the current one\n  const recentMessages = useMemo(() => {\n    return messages.slice(-4);\n  }, [messages]);\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-messages\">\n        {recentMessages.map((message, index) => (\n          <Message key={index} role={message.role} content={message.content} />\n        ))}\n        <div ref={messagesEndRef} />\n      </div>\n\n      <div className=\"chat-input-area\">\n        <textarea\n          className=\"chat-input\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Type a message...\"\n          onKeyDown={(e) => {\n            if (e.key === \"Enter\" && !e.shiftKey) {\n              handleSend(input);\n              e.preventDefault();\n            }\n          }}\n          rows=\"2\"\n        />\n        <button className=\"chat-send-button\" onClick={() => handleSend(input)}>\n          Send\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default ChatWindow;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}